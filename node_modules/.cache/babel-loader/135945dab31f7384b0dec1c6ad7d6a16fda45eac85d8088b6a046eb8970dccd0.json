{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\amazon_srcapper\\\\amazon-scraper-frontend\\\\src\\\\components\\\\CategoryList.js\",\n  _s = $RefreshSig$();\n// src/components/CategoryList.js\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = ({\n  setCategory,\n  selectedCategory\n}) => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/categories\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch categories\");\n        }\n        const result = await response.json();\n        setCategories(result.categories);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        setCategories([]);\n      }\n    };\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center mb-3\",\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item ${category === selectedCategory ? \"active\" : \"\"}`,\n        onClick: () => setCategory(category),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: category.charAt(0).toUpperCase() + category.slice(1)\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryList, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CategoryList","setCategory","selectedCategory","_s","categories","setCategories","fetchCategories","response","fetch","ok","Error","result","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","onClick","style","cursor","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/amazon_srcapper/amazon-scraper-frontend/src/components/CategoryList.js"],"sourcesContent":["// src/components/CategoryList.js\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst CategoryList = ({ setCategory, selectedCategory }) => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/categories\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch categories\");\r\n        }\r\n        const result = await response.json();\r\n        setCategories(result.categories);\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n        setCategories([]);\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"category-list\">\r\n      <h5 className=\"text-center mb-3\">Categories</h5>\r\n      <ul className=\"list-group\">\r\n        {categories.map((category) => (\r\n          <li\r\n            key={category}\r\n            className={`list-group-item ${\r\n              category === selectedCategory ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => setCategory(category)}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {category.charAt(0).toUpperCase() + category.slice(1)}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCP,aAAa,CAACM,MAAM,CAACP,UAAU,CAAC;MAClC,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDR,aAAa,CAAC,EAAE,CAAC;MACnB;IACF,CAAC;IACDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjB,OAAA;MAAIgB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDrB,OAAA;MAAIgB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBZ,UAAU,CAACiB,GAAG,CAAEC,QAAQ,iBACvBvB,OAAA;QAEEgB,SAAS,EAAE,mBACTO,QAAQ,KAAKpB,gBAAgB,GAAG,QAAQ,GAAG,EAAE,EAC5C;QACHqB,OAAO,EAAEA,CAAA,KAAMtB,WAAW,CAACqB,QAAQ,CAAE;QACrCE,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAAAT,QAAA,EAE5BM,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGL,QAAQ,CAACM,KAAK,CAAC,CAAC;MAAC,GAPhDN,QAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvCIH,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}