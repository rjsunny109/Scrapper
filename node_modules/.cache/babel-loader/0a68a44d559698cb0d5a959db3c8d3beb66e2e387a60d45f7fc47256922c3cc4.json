{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\amazon_srcapper\\\\amazon-scraper-frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data\n}) => {\n  _s();\n  const columns = React.useMemo(() => [{\n    Header: \"Title\",\n    accessor: \"title\"\n  }, {\n    Header: \"Price\",\n    accessor: \"price\"\n  }, {\n    Header: \"Total Reviews\",\n    accessor: \"total_reviews\"\n  }, {\n    Header: \"Scrape Date\",\n    accessor: \"scrape_date\"\n  }, {\n    Header: \"Image\",\n    accessor: \"image_url\",\n    Cell: ({\n      value\n    }) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: value,\n      alt: \"Product\",\n      className: \"table-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 30\n    }, this)\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"custom-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"YQiMXBL4+QlkLA9k7ipC/uQMP2A=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","DataTable","data","_s","columns","useMemo","Header","accessor","Cell","value","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/amazon_srcapper/amazon-scraper-frontend/src/components/DataTable.js"],"sourcesContent":["import React from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nconst DataTable = ({ data }) => {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      { Header: \"Title\", accessor: \"title\" },\r\n      { Header: \"Price\", accessor: \"price\" },\r\n      { Header: \"Total Reviews\", accessor: \"total_reviews\" },\r\n      { Header: \"Scrape Date\", accessor: \"scrape_date\" },\r\n      {\r\n        Header: \"Image\",\r\n        accessor: \"image_url\",\r\n        Cell: ({ value }) => <img src={value} alt=\"Product\" className=\"table-img\" />,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data });\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table {...getTableProps()} className=\"custom-table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}